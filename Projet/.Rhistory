ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=schoolsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre Temps de Voyage et Support Scolaire avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=Walc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Walc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
donnees$Walc.x <- factor(donnees$Walc.x)
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=Walc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Walc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=Walc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Walc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
donnees$famsup.x <- factor(donnees$famsup.x)
# Interaction entre traveltime.x et schoolsup.x
ggplot(donnees, aes(x=schoolsup.x, y=diff.x, color=famsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.x)) +
labs(title="Interaction entre Temps de Voyage et Support Scolaire avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
donnees$Dalc.x <- factor(donnees$Dalc.x)
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=schoolsup.x, y=diff.x, color=Dalc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
ggplot(donnees, aes(x=internet, y=diff.x, color=Dalc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
ggplot(donnees, aes(x=internet, y=diff.x, color=Walc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Walc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
model1.y <- lm(G3.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model1.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model1$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model1))
# vérifie la normalité des résidus
qqPlot(model1.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model1))
# 2e test pour s'en assurer
shapiro.test(residuals(model1,y))
# 2e test pour s'en assurer
shapiro.test(residuals(model1.y))
dwtest(model1.y)
bc_result <- boxcox(model1.y, lambda = seq(-2, 2, by = 0.1))
# Trouver la valeur de lambda qui maximise la log-vraisemblance
(best_lambda <- bc_result$x[which.max(bc_result$y)])
# Appliquer la transformation Box-Cox à G3.x
donnees$boxcoxG3.y <- (donnees$G3.y^best_lambda - 1) / best_lambda
model1B.y <- lm(G3.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model1B.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model1B.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model1B.y))
model1B.y <- lm(boxcoxG3.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model1B.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model1B.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model1B.y))
dwtest(model1B.y)
Anova(model1B.y, type = "II")
ggplot(donnees, aes(x=traveltime.x, y=G3.y, color=Dalc.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.y)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool la semaine avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
# observer les 2 graphiques intéractions
donnees$traveltime.y <- as.factor(donnees$traveltime.y)
ggplot(donnees, aes(x=traveltime.y, y=G3.y, color=Dalc.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.y)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool la semaine avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
donnees$Dalc.y <- as.factor(donnees$Dalc.y)
ggplot(donnees, aes(x=traveltime.y, y=G3.y, color=Dalc.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.y)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool la semaine avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
# plus tu consommes et que tu as un long temps de voyage, plus ta différence de note est positive...
donnees$famsup.y <- as.factor(donnees$famsup.y)
ggplot(donnees, aes(x=internet, y=diff.x, color=famsup.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.y)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
ggplot(donnees, aes(x=internet, y=diff.x, color=famsup.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.y)) +
labs(title="Interaction entre la posession d'internet et le support familiale avec Différence de Notes",
x="Internet",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
model2.y <- lm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model2.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model2.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model2.y))
bc_result <- boxcox(model2.y, lambda = seq(-2, 2, by = 0.1))
constante <- abs(min(donnees$diff.y)) + 1
constante
donnees$diff.y.positive <- donnees$diff.y + constante
model2.y2 <- lm(diff.y.positive ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# maintenant on va pouvoir faire la transformation de boxcox
bc_result <- boxcox(model2.y2, lambda = seq(-2, 2, by = 0.1))
# Trouver la valeur de lambda qui maximise la log-vraisemblance
(best_lambda <- bc_result$x[which.max(bc_result$y)])
# Appliquer la transformation Box-Cox à G3.x
donnees$boxcoxG3.y2 <- (donnees$diff.y.positive^best_lambda - 1) / best_lambda
plot(model2.y, which = 1)
model2.y2B <- lm(boxcoxG3.y2 ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
plot(model2.y, which = 1)
plot(model2.y2B, which = 1)
# mouais
qqPlot(model2.y2B$residuals,pch=20)
# ça va
shapiro.test(residuals(model2.y2B))
dwtest(model2.y2B)
# Essayons une transformation arcsinh
donnees$arcsinh_diff.y <- asinh(donnees$diff.y)
model_arcsinh.y <- lm(arcsinh_diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
summary(model_arcsinh.y)
plot(model_arcsinh.y, which = 1)
# ça va
# mouais
qqPlot(model_arcsinh.y$residuals,pch=20)
# ça va
shapiro.test(residuals(model_arcsinh.y))
dwtest(model_arcsinh.y)# marche pas
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
family = gaussian, data = donnees)
# Analyser les résultats
summary(model_glm)
summary(modele2)
summary(model2)
# Analyser les résultats
summary(model_glm)
summary(model2.y)
summary(model2)
summary(model2.y)
donnees <- donnees_sauvegarde
model2.y <- lm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model2.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model2.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model2.y))
bc_result <- boxcox(model2.y, lambda = seq(-2, 2, by = 0.1))
constante <- abs(min(donnees$diff.y)) + 1
donnees$diff.y.positive <- donnees$diff.y + constante
model2.y2 <- lm(diff.y.positive ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# maintenant on va pouvoir faire la transformation de boxcox
bc_result <- boxcox(model2.y2, lambda = seq(-2, 2, by = 0.1))
# Trouver la valeur de lambda qui maximise la log-vraisemblance
(best_lambda <- bc_result$x[which.max(bc_result$y)])
# Appliquer la transformation Box-Cox à G3.x
donnees$boxcoxG3.y2 <- (donnees$diff.y.positive^best_lambda - 1) / best_lambda
model2.y2B <- lm(boxcoxG3.y2 ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
plot(model2.y2B, which = 1)
# mouais
qqPlot(model2.y2B$residuals,pch=20)
# ça va
shapiro.test(residuals(model2.y2B))
dwtest(model2.y2B)# marche pas
# Essayons une transformation arcsinh
donnees$arcsinh_diff.y <- asinh(donnees$diff.y)
model_arcsinh.y <- lm(arcsinh_diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
summary(model_arcsinh.y)
plot(model_arcsinh.y, which = 1)
# grosse amélioration
qqPlot(model_arcsinh.y$residuals,pch=20)
# ça va bof
shapiro.test(residuals(model_arcsinh.y))
dwtest(model_arcsinh.y)# marche pas
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
family = gaussian, data = donnees)
# Analyser les résultats
summary(model_glm)
plot(model_glm, which = 1)
# mouais
qqPlot(model_glm$residuals,pch=20)
# ça va
shapiro.test(residuals(model_glm))
dwtest(model_glm)# Seule la normalité ne fonctionne pas
model_glm_binomial <- glm(formula = diff.y ~ predictors, family = binomial(link = "logit"), data = donnees)
model_glm_binomial <- glm(traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,  family = binomial(link = "logit"), data = donnees)
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
family = binomial(link = "logit"), data = donnees)
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
family = poisson(link = "log"), data = donnees)
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
model_glm_gamma, data = donnees)
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
model_glm_invgauss, data = donnees)
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
family = Gamma(link = "inverse"), data = donnees)
model_glm <- glm(diff.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2,
family = inverse.gaussian(link = "1/mu^2"), data = donnees)
set.seed(2024)
donnees <- read.table("student-mat_por.csv", sep = ",", header = TRUE)
library(car)
library(MASS)
install.packages("lmtest")
install.packages("lmtest")
set.seed(2024)
donnees <- read.table("student-mat_por.csv", sep = ",", header = TRUE)
library(car)
library(MASS)
install.packages("lmtest")
library(lmtest)
which(donnees$G3.x == 0)
donnees <- donnees[donnees$G3.x > 0, ]
which(donnees$G3.x == 0)
which(donnees$G3.y == 0)
donnees <- donnees[donnees$G3.y > 0, ]
which(donnees$G3.y == 0)
# à cause de plusieurs analyse, on change le "yes", "no" en 1 et 0 respectivement.
donnees$schoolsup.x <- ifelse(donnees$schoolsup.x == "yes", 1, 0)
donnees$schoolsup.y <- ifelse(donnees$schoolsup.y == "yes", 1, 0)
donnees$famsup.x <- ifelse(donnees$famsup.x == "yes", 1, 0)
donnees$famsup.y <- ifelse(donnees$famsup.y == "yes", 1, 0)
donnees$paid.x <- ifelse(donnees$paid.x == "yes", 1, 0)
donnees$paid.y <- ifelse(donnees$paid.y == "yes", 1, 0)
donnees$internet <- ifelse(donnees$internet == "yes", 1, 0)
donnees$diff.x <- donnees$G3.x - donnees$G1.x
donnees$diff.y <- donnees$G3.y - donnees$G1.y
donnees_sauvegarde <- donnees # une sauvegarde des données
# On créé notre premier modèle d'anova
model1 <- lm(G3.x ~ traveltime.x + studytime.x + schoolsup.x + famsup.x + paid.x + internet + Dalc.x + Walc.x, data = donnees)
# Vérification de la linéarité et homoscédasticité
plot(model1, which = 1)
# vérifie la normalité des résidus
qqPlot(model1$residuals,pch=20)
# Recherche de la meilleure transformation Box-Cox
bc_result <- boxcox(model1, lambda = seq(-2, 2, by = 0.1))
# Trouver la valeur de lambda qui maximise la log-vraisemblance
(best_lambda <- bc_result$x[which.max(bc_result$y)])
# Appliquer la transformation Box-Cox à G3.x
donnees$boxcoxG3.x <- (donnees$G3.x^best_lambda - 1) / best_lambda
# On applique avec le modèle avec boxcoxG3.x
model1B <- lm(boxcoxG3.x ~ traveltime.x + studytime.x + schoolsup.x + famsup.x + paid.x + internet + Dalc.x + Walc.x, data = donnees)
# On vérifie la normalité des résidus
qqPlot(model1B$residuals,pch=20)
plot(model1, which = 1)# model1C
# On vérifie la normalité des résidus
qqPlot(model1B$residuals,pch=20)
attach(donnees)
plot(model1B, which = 1)
Anova(model1B, type="II")
model_interactions.x <- lm(boxcoxG3.x ~ (traveltime.x + studytime.x + schoolsup.x + famsup.x + paid.x + internet + Dalc.x + Walc.x)^2, data = donnees)
plot(model_interactions.x, which = 1) #  C'est à peu près linéaire et ça respecte l'homooscédasticité
shapiro.test(residuals(model1B))
attach(donnees)
dwtest(model1B)
Anova(model1B, type="II")
model_interactions.x <- lm(boxcoxG3.x ~ (traveltime.x + studytime.x + schoolsup.x + famsup.x + paid.x + internet + Dalc.x + Walc.x)^2, data = donnees)
plot(model_interactions.x, which = 1) #model1Ba
qqPlot(model_interactions.x$residuals,pch=20) #model1Bb
dwtest(model_interactions.x) # variance résidus égales
Anova(model_interactions.x, type = "II")
library(ggplot2)
# Interaction entre studytime.x et schoolsup.x
ggplot(donnees, aes(x=studytime.x, y=boxcoxG3.x, color=factor(schoolsup.x))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre Study Time et School Support",
x="Temps d'étude",
y="Note 3e Trimestre") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
shapiro.test(residuals(model1))
shapiro.test(residuals(model1B))
# Interaction entre studytime.x et schoolsup.x
ggplot(donnees, aes(x=studytime.x, y=boxcoxG3.x, color=factor(schoolsup.x))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre Study Time et School Support",
x="Temps d'étude",
y="Note 3e Trimestre") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
# Interaction entre studytime.x et schoolsup.x
ggplot(donnees, aes(x=studytime.x, y=boxcoxG3.x, color=factor(schoolsup.x))) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre temps d'étude et support scolaire avec la note finale",
x="Temps d'étude",
y="Note Finale") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
donnees$famsup.x <- as.factor(donnees$famsup.x)
# Interaction entre studytime.x et famsup.x
ggplot(donnees, aes(x=studytime.x, y=boxcoxG3.x, color=famsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.x)) +
labs(title="Interaction entre temps d'étude et le support familial avec la note finale",
x="Temps d'étude",
y="Note 3e Trimestre") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
model2 <- lm(diff.x ~ (traveltime.x + studytime.x + schoolsup.x + famsup.x + paid.x + internet + Dalc.x + Walc.x)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité
plot(model2, which = 1)
# vérifie la normalité des résidus
qqPlot(model2$residuals,pch=20)
donnees$studytime.x <- as.factor(donnees$studytime.x)
# Interaction entre traveltime.x et studytime.x
ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=studytime.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=studytime.x)) +
labs(title="Interaction entre Temps de voyage et temps d'étude avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red", "green", "orange")) +
theme_minimal()
donnees$schoolsup.x <- factor(donnees$schoolsup.x)
# Interaction entre traveltime.x et schoolsup.x
ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=schoolsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre Temps de Voyage et Support Scolaire avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
donnees$Walc.x <- factor(donnees$Walc.x)
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=traveltime.x, y=diff.x, color=Walc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Walc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool la fin de semaine avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
donnees$famsup.x <- factor(donnees$famsup.x)
# Interaction entre traveltime.x et schoolsup.x
ggplot(donnees, aes(x=schoolsup.x, y=diff.x, color=famsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.x)) +
labs(title="Interaction entre support scolaire et Support familial avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
donnees$Dalc.x <- factor(donnees$Dalc.x)
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=schoolsup.x, y=diff.x, color=Dalc.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.x)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool le Week-End avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=Dalc.x, y=diff.x, color=schoolsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre consommation d'alcool la fin de semaine et le support scolaire avec Différence de Notes",
x="consommation d'alcool",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
# Interaction entre traveltime.x et Walc.x
ggplot(donnees, aes(x=Dalc.x, y=diff.x, color=schoolsup.x)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=schoolsup.x)) +
labs(title="Interaction entre consommation d'alcool la fin de semaine et le support scolaire avec Différence de Notes",
x="consommation d'alcool la fin de semaine",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()# model2g
ggplot(donnees, aes(x=Dalc.x, y=diff.x, color=internet)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=internet)) +
labs(title="Interaction entre consommation d'alcool la semaine et l'internet à la avec Différence de Notes",
x="Consommation d'alcool la semaine",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
donnees$internet <- factor(donnees$internet)
ggplot(donnees, aes(x=Dalc.x, y=diff.x, color=internet)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=internet)) +
labs(title="Interaction entre consommation d'alcool la semaine et l'internet à la avec Différence de Notes",
x="Consommation d'alcool la semaine",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
ggplot(donnees, aes(x=Walc.x, y=diff.x, color=internet)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=internet)) +
labs(title="Interaction entre consommation d'alcool fin de semaine et l'internet à la avec Différence de Notes",
x="Consommation d'alcool la semaine",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
model1.y <- lm(G3.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model1.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model1.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model1.y))
bc_result <- boxcox(model1.y, lambda = seq(-2, 2, by = 0.1))
# Trouver la valeur de lambda qui maximise la log-vraisemblance
(best_lambda <- bc_result$x[which.max(bc_result$y)])
# Appliquer la transformation Box-Cox à G3.x
donnees$boxcoxG3.y <- (donnees$G3.y^best_lambda - 1) / best_lambda
model1B.y <- lm(boxcoxG3.y ~ (traveltime.y + studytime.y + schoolsup.y + famsup.y + paid.y + internet + Dalc.y + Walc.y)^2, data = donnees)
# Vérification de la linéarité et homoscédasticité (égalité des variances des résidus)
plot(model1B.y, which = 1)
# vérifie la normalité des résidus
qqPlot(model1B.y$residuals,pch=20)
# 2e test pour s'en assurer
shapiro.test(residuals(model1B.y))
dwtest(model1B.y)
Anova(model1B.y, type = "II")
# observer les 2 graphiques intéractions
donnees$traveltime.y <- as.factor(donnees$traveltime.y)
donnees$Dalc.y <- as.factor(donnees$Dalc.y)
ggplot(donnees, aes(x=traveltime.y, y=G3.y, color=Dalc.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=Dalc.y)) +
labs(title="Interaction entre Temps de Voyage et Consommation d'Alcool la semaine avec Différence de Notes",
x="Temps de Voyage",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red","black","orange", "green")) +
theme_minimal()
ggplot(donnees, aes(x=internet, y=diff.x, color=famsup.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.y)) +
labs(title="Interaction entre la posession d'internet et le support familiale avec Différence de Notes",
x="Internet",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
# plus tu consommes et que tu as un long temps de voyage, plus ta différence de note est positive...
donnees$famsup.y <- as.factor(donnees$famsup.y)
ggplot(donnees, aes(x=internet, y=diff.x, color=famsup.y)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, aes(group=famsup.y)) +
labs(title="Interaction entre la posession d'internet et le support familiale avec Différence de Notes",
x="Internet",
y="Différence de Notes") +
scale_color_manual(values=c("blue", "red")) +
theme_minimal()
